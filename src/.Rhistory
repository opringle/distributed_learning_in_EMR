str(returns)
returns$variable <- as.numeric(returns$variable)
combined <- variables %>%
left_join(returns, by = c("yr" = "variable", "stk" = "cu"))
View(variables)
View(combined)
returns <- read_csv("./total_spawners.csv")
returns <- melt(returns, id.vars = c("cu", "description"), value.name = "return")
returns$variable <- as.integer(returns$variable)
returns <- read_csv("./total_spawners.csv")
returns <- melt(returns, id.vars = c("cu", "description"), value.name = "return")
returns$variable <- as.character(returns$variable)
returns$variable <- as.numeric(returns$variable)
combined <- variables %>%
left_join(returns, by = c("yr" = "variable", "stk" = "cu"))
View(combined)
returns <- read_csv("./total_spawners.csv")
returns <- melt(returns, id.vars = c("stk", "description"), value.name = "return")
returns <- read_csv("./total_spawners.csv")
returns <- read_csv("./total_spawners.csv")
returns <- melt(returns, id.vars = c("stk", "description"), value.name = "return")
str(returns)
returns$variable <- as.character(returns$variable)
returns$variable <- as.numeric(returns$variable)
combined <- variables %>%
left_join(returns, by = c("yr" = "variable", "stk" = "cu"))
combined <- variables %>%
left_join(returns, by = c("yr" = "variable", "stk" = "stk"))
View(combined)
combined <- combined[!is.na(combined$return), ]
?write_csv
write_csv(combined, "./ml_dat")
write_csv(combined, "./ml_dat.csv")
combined_df <- combined %>%
select(-description)
combined_df <- combined %>%
select(-description, -juv, -rec, -rec2, -rec3, -rec4, -rec5, -eff)
View(combined_df)
combined_df[complete.cases(combined_df), ]
combined_df <- combined_df[complete.cases(combined_df), ]
write_csv(combined, "./ml_dat.csv")
write_csv(combined_df, "./ml_dat.csv")
library(tidyverse)
library(reshape2)
variables <- read_csv("./fish_dat.csv")
print(unique(variables$yr))
returns <- read_csv("./total_spawners.csv")
returns <- melt(returns, id.vars = c("stk", "description"), value.name = "return")
str(returns)
returns$variable <- as.character(returns$variable)
returns$variable <- as.numeric(returns$variable)
combined <- variables %>%
left_join(returns, by = c("yr" = "variable", "stk" = "stk"))
combined <- combined[!is.na(combined$return), ]
combined_df <- combined %>%
select(-description, -juv, -rec, -rec2, -rec3, -rec4, -rec5, -eff)
combined_df <- combined_df[complete.cases(combined_df), ]
write_csv(combined_df, "./ml_dat.csv")
p <- ggplot(data = combined_df, aes(x = yr, y = aflow, colour = stk))
p + geom_point()
p <- ggplot(data = combined_df, aes(x = yr, y = aflow, colour = as.factor(stk)))
p + geom_point()
p <- ggplot(data = combined_df, aes(x = yr, y = return, colour = as.factor(stk)))
p + geom_point()
p <- ggplot(data = combined_df, aes(x = yr, y = as.numeric(return), colour = as.factor(stk)))
p + geom_point()
p + geom_point() + scale_y_log10()
p + geom_line() + scale_y_log10()
knitr::opts_chunk$set(echo = TRUE)
library(RODBC)
library(tidyverse)
pw <- "Opensaysme23!"
con_str <- paste0("Driver={ODBC Driver 13 for SQL Server};Server=tcp:cmbc-ubc.database.windows.net,1433;Database=cmbc;Uid=dbadmin@cmbc-ubc;Pwd=",pw,";Encrypt=yes;TrustServerCertificate=no;Connection Timeout=30;")
conn <- odbcDriverConnect(con_str)
sqlTables(conn) %>% filter(TABLE_SCHEM == "dbo")
sqlQuery_m1 <- "SELECT * FROM fran_plot_2"
m1 <- sqlQuery(conn, sqlQuery_m1)
View(m1)
sqlQuery_m1 <- "SELECT * FROM fran_plot_1"
m1 <- sqlQuery(conn, sqlQuery_m1)
View(m1)
sqlQuery_m1 <- "SELECT * FROM fran_plot_2"
sqlTables(conn) %>% filter(TABLE_SCHEM == "dbo")
sqlQuery_m1 <- "SELECT * FROM trend_in_run_time"
m1 <- sqlQuery(conn, sqlQuery_m1)
View(m1)
library(reshape2)
melt(m1)
m1$variable <- gsub('average_actual_run_time', 'actual', m1$variable)
m1
m1 <- melt(m1)
m1
m1$variable <- gsub('average_actual_run_time', 'actual', m1$variable)
m1$variable <- gsub('average_scheduled_run_time', 'scheduled', m1$variable)
m1
names(m1)
m1
m1$sheet_code <- as.Date(m1$sheet_code, "%y%b")
m1
m1
m1
View(m1)
m1 <- sqlQuery(conn, sqlQuery_m1)
library(reshape2)
m1 <- melt(m1)
m1$variable <- gsub('average_actual_run_time', 'actual', m1$variable)
m1$variable <- gsub('average_scheduled_run_time', 'scheduled', m1$variable)
View(m1)
m1$date <- as.Date(m1$sheet_code, "%y%b")
m1$date <- as.Date(m1$sheet_code)
?as.Date
m1$sheet_code <- paste0(m1$sheet_code, "01")
m1$date <- as.Date(m1$sheet_code, "%y%b%d")
p <- ggplot(data = m1, aes(x = date, y = value, fill = variable))
p + geom_line()
p <- ggplot(data = m1, aes(x = date, y = value, colour = variable))
p + geom_line()
p <- ggplot(data = m1, aes(x = date, y = value/60, colour = variable))
p + geom_line() + ylab("Run Time (minutes)")
p + geom_line() + ylab("Average Run Time per Sheet (minutes)")
p + geom_bar() + ylab("Average Run Time per Sheet (minutes)")
p + geom_point() + ylab("Average Run Time per Sheet (minutes)")
p + geom_line() + ylab("Average Run Time per Sheet (minutes)")
p + geom_line() + ylab("Average Run Time per Sheet (minutes)") + theme_bw()
p + geom_line() + ylab("Average Run Time per Sheet (minutes)") + theme_bw() + xlab("Date")
ggsave("./report_plot.pdf")
ggsave("./report_plot.pdf", width = 12)
p + geom_line() + ylab("Average Run Time per Sheet (minutes)") + theme_bw() + xlab("Date")
p + geom_line() + ylab("Average Run Time per Sheet (minutes)") + theme_bw() + xlab("Date") + theme(axis.text.x = element_text(hjust =1, size = 9),
axis.text.y = element_text(size = 12),
text = element_text(size=18),
plot.title = element_text(size=22))
p + geom_line() + ylab("Average Run Time per Sheet (minutes)") + theme_bw() + xlab("Date") + theme(axis.text.x = element_text(hjust =1, size = 9),
axis.text.y = element_text(size = 9),
text = element_text(size=18),
plot.title = element_text(size=22))
p + geom_line() + ylab("Average Run Time per Sheet (minutes)") + theme_bw() + xlab("Date") + theme(axis.text.x = element_text(hjust =1, size = 9),
axis.text.y = element_text(size = 9),
text = element_text(size=12),
plot.title = element_text(size=22))
ggsave("./report_plot.pdf", width = 12)
2+2
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
read_csv("./nlplogs_atbprod.xlsx")
read_csv("./nlplogs_atbprod.csv")
df <- read_csv("./nlplogs_atbprod.csv")
(df <- read_csv("./nlplogs_atbprod.csv"))
df %>%
group_by(intent) %>%
summarise(freq <- n())
df %>%
group_by(intent) %>%
summarise(freq = n()) %>%
arrange(freq)
df %>%
group_by(intent) %>%
summarise(freq = n()) %>%
arrange(desc(freq))
summary <- df %>%
group_by(intent) %>%
summarise(freq = n()) %>%
arrange(desc(freq))
(df <- read_csv("./nlplogs_atbprod.csv"))
library(lubridate)
(df <- read_csv("./nlplogs_atbprod.csv"))
summary <- df %>%
filter(createdAt > as.Date("2017-05-01"))
summary <- df %>%
filter(createdAt > as.Date("2017-05-01")) %>%
group_by(intent) %>%
summarise(freq = n()) %>%
arrange(desc(freq))
summary <- df %>%
filter(createdAt > as.Date("2017-05-01"))
View(summary)
max(summary$createdAt)
min(summary$createdAt)
max(summary$createdAt)
summary <- df %>%
filter(createdAt > as.Date("2017-05-01")) %>%
group_by(intent) %>%
summarise(freq = n()) %>%
arrange(desc(freq))
View(summary)
write_csv(summary, "./log_summary.csv")
knitr::opts_chunk$set(echo = TRUE)
(df <- read_csv("./Downloads/Banpro - Queries - Product Info - ES - Query Examples EN-ES.csv"))
library(tidyverse)
(df <- read_csv("./Downloads/Banpro - Queries - Product Info - ES - Query Examples EN-ES.csv"))
df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n())
df_summary
df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()) %>%
arrange(freq)
df_summary
df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()) %>%
arrange(freq, desc = TRUE)
df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()) %>%
arrange(desc(freq))
df_summary
df %>% filter(Intent == "i.FAI.product.moredetails")
write_csv(x = output, path = "./Downloads/reduction.csv")
output <- df %>% filter(Intent == "i.FAI.product.moredetails")
write_csv(x = output, path = "./Downloads/reduction.csv")
output$Intent <- tolower(output$Intent)
output
output$`Expression (ENGLISH)` <- tolower(output$`Expression (ENGLISH)`)
output
output <- unique(output)
output <- output[,1:2]
output <- unique(output[,1:2])
write_csv(x = output, path = "./Downloads/reduction.csv")
unique(output$`Expression (ENGLISH)`)
(df <- read_csv("./Downloads/Banpro - Queries - Product Info - ES - Query Examples EN-ES.csv"))
df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()) %>%
arrange(desc(freq))
df_summary
output <- df %>% filter(Intent == "i.FAI.product.moredetails")
output$Intent <- tolower(output$Intent)
output$`Expression (ENGLISH)` <- tolower(output$`Expression (ENGLISH)`)
output <- unique(output)
unique(output$`Expression (ENGLISH)`)
write_csv(x = output, path = "./Downloads/reduction.csv")
output <- unique(output) %>%
arrange(length(output$`Expression (ENGLISH)`))
length(output$`Expression (ENGLISH)`)
output <- df %>%
filter(Intent == "i.FAI.product.moredetails") %>%
arrange(nchar(`Expression (ENGLISH)`))
View(output)
output$Intent <- tolower(output$Intent)
output$`Expression (ENGLISH)` <- tolower(output$`Expression (ENGLISH)`)
write_csv(x = output, path = "./Downloads/reduction.csv")
n <- 40
(df <- read_csv("./Downloads/Banpro - Queries - Product Info - ES - Query Examples EN-ES.csv"))
(df <- read_csv("./input.csv"))
df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()) %>%
arrange(desc(freq))
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()) %>%
arrange(desc(freq)))
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()) %>%
arrange(freq))
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()) %>%
arrange(freq)) %>%
mutate(freq>n = freq >=n)
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()) %>%
arrange(freq)) %>%
mutate(freq_gt_n = freq >=n)
if{FALSE %in% df_summary$freq_gt_n}
if(FALSE %in% df_summary$freq_gt_n){
print("WARNING, SOME INTENTS DO NOT HAVE ENOUGH UTTERANCES")
}
if(FALSE %in% df_summary$freq_gt_n){
print("WARNING, SOME INTENTS DO NOT HAVE ENOUGH UTTERANCES")
}
else{
if(FALSE %in% df_summary$freq_gt_n){
print("WARNING, SOME INTENTS DO NOT HAVE ENOUGH UTTERANCES")
}else{
print("CARRY ON")
}
View(df_summary)
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()) %>%
arrange(freq)) %>%
mutate(freq_gt_n = freq >=n)
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()) %>%
arrange(freq)) %>%
mutate(enough_utterances = df_summaryfreq >= n)
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()) %>%
arrange(freq)) %>%
mutate(enough_utterances = df_summary$freq >= n)
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()) %>%
mutate(enough_utterances = df_summary$freq >= n) %>%
arrange(freq))
View(df_summary)
n <- 60
n <- 60
(df <- read_csv("./input.csv"))
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()) %>%
mutate(enough_utterances = df_summary$freq >= n) %>%
arrange(freq))
if(FALSE %in% df_summary$freq_gt_n){
print("WARNING, SOME INTENTS DO NOT HAVE ENOUGH UTTERANCES")
}else{
print("CARRY ON")
}
if(FALSE %in% df_summary$enough_utterances){
print("WARNING, SOME INTENTS DO NOT HAVE ENOUGH UTTERANCES")
}else{
print("CARRY ON")
}
n <- 40
(df <- read_csv("./input.csv"))
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()) %>%
mutate(enough_utterances = df_summary$freq >= n) %>%
arrange(freq))
if(FALSE %in% df_summary$enough_utterances){
print("WARNING, SOME INTENTS DO NOT HAVE ENOUGH UTTERANCES")
}else{
print("CARRY ON")
}
df_summary <- df_summary %>%
filter(enough_utterances == TRUE)
n <- 60
(df <- read_csv("./input.csv"))
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()) %>%
mutate(enough_utterances = df_summary$freq >= n) %>%
arrange(freq))
if(FALSE %in% df_summary$enough_utterances){
print("WARNING, SOME INTENTS DO NOT HAVE ENOUGH UTTERANCES")
}else{
print("CARRY ON")
}
df_summary <- df_summary %>%
filter(enough_utterances == TRUE)
n <- 40
(df <- read_csv("./input.csv"))
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()) %>%
mutate(enough_utterances = df_summary$freq >= n) %>%
arrange(freq))
if(FALSE %in% df_summary$enough_utterances){
print("WARNING, SOME INTENTS DO NOT HAVE ENOUGH UTTERANCES")
}else{
print("CARRY ON")
}
df_summary <- df_summary %>%
filter(enough_utterances == TRUE)
View(df_summary)
(df <- read_csv("./input2.csv"))
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()) %>%
mutate(enough_utterances = df_summary$freq >= n) %>%
arrange(freq))
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n())# %>%
mutate(enough_utterances = df_summary$freq >= n) %>%
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()))# %>%
View(df_summary)
View(df)
?read_csv
(df <- read_csv("./input2.csv", col_names = FALSE))
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()))# %>%
(df_summary <- df %>%
group_by(X1) %>%
summarise(freq = n()))# %>%
View(df_summary)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
(df <- read_csv("./training_data.csv"))
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n())%>%
arrange(freq))
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()%>%
arrange(freq))
#check each intent has enough utterances
if(FALSE %in% df_summary$enough_utterances){
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n()) %>%
arrange(freq))
(df_summary <- df %>%
group_by(Intent) %>%
summarise(freq = n())
#check each intent has enough utterances
if(FALSE %in% df_summary$enough_utterances){
(df_summary <- df %>%
group_by(intent) %>%
summarise(freq = n())
#check each intent has enough utterances
if(FALSE %in% df_summary$enough_utterances){
df_summary <- df %>%
group_by(intent) %>%
summarise(freq = n())
View(df_summary)
(df_summary <- df %>%
group_by(intent) %>%
summarise(freq = n()))
(df_summary <- df %>%
group_by(intent) %>%
summarise(freq = n()) %>%
arrange(freq))
(df_summary <- df %>%
group_by(intent) %>%
summarise(freq = n()) %>%
arrange(desc(freq)))
df %>% filter(intent in c("i.BBC.Open-Apply-SetUp-Enrol", "i.BBC.Define-Describe"))
df %>% filter(intent %in% c("i.BBC.Open-Apply-SetUp-Enrol", "i.BBC.Define-Describe"))
df_2_intents <- df %>%
filter(intent %in% c("i.BBC.Open-Apply-SetUp-Enrol", "i.BBC.Define-Describe"))
View(df_2_intents)
sample_n(df_2_intents, 10)
df_intent1_random_sample <- sample_n(df %>% filter(intent %in% c("i.BBC.Open-Apply-SetUp-Enrol")), 100)
df_intent2_random_sample <- sample_n(df %>% filter(intent %in% c("i.BBC.Define-Describe")), 100)
bind_rows(df_intent1_random_sample, df_intent2_random_sample)
output_df <- bind_rows(df_intent1_random_sample, df_intent2_random_sample)
(output_df <- bind_rows(df_intent1_random_sample, df_intent2_random_sample))
(output_df <- bind_rows(df_intent1_random_sample, df_intent2_random_sample) %>% rename(mturk_utterance = expression))
write_csv(outut_df, "./output.csv")
write_csv(ouput_df, "./output.csv")
write_csv(output_df, "./output.csv")
knitr::opts_chunk$set(echo = TRUE)
test <- bind_rows(df_test %>% filter(df_test$`�intent` %in% c("i.BBC.Open-Apply-SetUp-Enrol")),
df_test %>% filter(df_test$`�intent` %in% c("i.BBC.Define-Describe")))
library(tidyverse)
df_test <- read_csv("./utterance_filter_evaluation/test_utterances.csv")
test <- bind_rows(df_test %>% filter(df_test$`�intent` %in% c("i.BBC.Open-Apply-SetUp-Enrol")),
df_test %>% filter(df_test$`�intent` %in% c("i.BBC.Define-Describe")))
names(df_test)
names(df_test)[1]
names(df_test)[1] <- "intent"
test <- bind_rows(df_test %>% filter(intent %in% c("i.BBC.Open-Apply-SetUp-Enrol")),
df_test %>% filter(intent %in% c("i.BBC.Define-Describe")))
View(df_test)
df_test %>%
group_by(intent) %>%
summarise(freq= n())
df_test %>%
group_by(intent) %>%
summarise(freq= n()) %>%
arrange(desc(freq))
test <- bind_rows(df_test %>% filter(intent %in% c("i.atb-BBC.accounts.fees.list")),
df_test %>% filter(intent %in% c("i.atb-BBC.accounts.open.business.procedure")))
View(test)
df_test %>%
group_by(intent) %>%
summarise(freq= n()) %>%
arrange(desc(freq))
df_test <- read_csv("./utterance_filter_evaluation/test_utterances.csv")
df_test %>%
group_by(intent) %>%
summarise(freq= n()) %>%
arrange(desc(freq))
names(df_test)[1] <- "intent"
df_test %>%
group_by(intent) %>%
summarise(freq= n()) %>%
arrange(desc(freq))
test <- bind_rows(df_test %>% filter(intent %in% c("intent.finnai.applyNow")),
df_test %>% filter(intent %in% c("intent.api.fallbackIntent")))
View(test)
load("./Documents/Repos/cmbc_analysis/data/timing_point_data.csv")
load("./Documents/Repos/cmbc_analysis/data/tp_sample_data_v0.Rda")
head(data_v0)
head(data_v0,5)
head(data_v0,5)
d <- head(data_v0,5)
write.csv(d,file="data_sample.csv")
library(tidyverse)
data_v0 %>%
group_by(linegroup_no) %>%
summarise(n())
data_v0 %>%
group_by(line_no) %>%
summarise(n())
max(data_v0$operating_date)
min(data_v0$operating_date)
load("./data/tp_sample_data_v0.Rda")
load("../data/tp_sample_data_v0.Rda")
library(rjson)
data_v0 <- head(data_v0)
load("../data/tp_sample_data_v0.Rda")
setwd("~/Documents/Repos/cmbc_analysis/src")
load("../data/tp_sample_data_v0.Rda")
library(rjson)
x <- toJSON(unname(split(data_v0, 1:nrow(data_v0))))
print("done :)")
ls
